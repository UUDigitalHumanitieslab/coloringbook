version: '3.9'

x-app-base: &app-base
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - CONFIG_FILE=${CONFIG_FILE}
    env_file: .env
    ports:
      - 5000:5000
    environment:
      - DB_DB=${DB_DB}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - .:/coloringbook:rw

services:
  app-dev:
    <<: *app-base
    profiles: ["dev"]
    build:
      args:
        - DEVELOPMENT=1
    depends_on:
      db-dev:
        condition: service_healthy

  app:
    <<: *app-base
    profiles: ["prod"]
    build:
      args:
        - DEVELOPMENT=0

  db-dev:
    image: mysql:5.7
    env_file: .env
    profiles: ["dev"]
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_DB}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-p${DB_PASSWORD}"]
      timeout: 20s
      retries: 10
    volumes:
      - sql-db:/var/lib/mysql

  redis:
    image: redis:6.2
  
  worker: &worker-prod
    profiles: ["prod"]
    build: .
    command: celery -A make_celery worker --loglevel=info --uid=nobody --gid=nogroup
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=project.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CONFIG_FILE=${CONFIG_FILE}
    depends_on:
      - redis
    volumes:
      - .:/coloringbook:rw

  worker-dev:
    <<: *worker-prod
    profiles: ["dev"]
    depends_on:
      - redis
      - db-dev

volumes:
  sql-db:

