version: '3.9'

services:
  app: &app-prod
    container_name: cb-app
    image: cb-app-prod 
    profiles: ["prod"]
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      - DB_DB=${DB_DB}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    command: >
      bash -c "gunicorn -b 0.0.0.0:5000 'coloringbook:prod_app'" 
    volumes:
      - .:/coloringbook:rw
    ports:
      - 5000:5000

  app-dev:
    <<: *app-prod
    image: cb-app-dev
    profiles: ["dev"]
    command: >
      bash -c "python manage.py -A -c ${CONFIG_FILE} db upgrade 
      && python manage.py -c ${CONFIG_FILE} runserver --host 0.0.0.0 -dr"

  db:
    image: mysql:5.7
    container_name: cb-db
    env_file: .env
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_DB}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-u", "${DB_USER}", "-p${DB_PASSWORD}"]
      timeout: 20s
      retries: 10
    volumes:
      - sql-db:/var/lib/mysql

  redis:
    container_name: cb-redis
    image: redis:6.2
  
  worker: &worker-prod
    build: .
    container_name: cb-worker
    image: cb-worker-prod
    profiles: ["prod"]
    command: celery -A make_celery worker --uid=nobody --gid=nogroup
    environment:
      - FLASK_DEBUG=0
      - APP_SETTINGS=project.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CONFIG_FILE=${CONFIG_FILE}
    depends_on:
      - db
      - redis
    volumes:
      - .:/coloringbook:rw

  worker-dev:
    <<: *worker-prod
    image: cb-worker-dev
    profiles: ["dev"]
    command: celery -A make_celery worker --loglevel=info --uid=nobody --gid=nogroup
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=project.server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CONFIG_FILE=${CONFIG_FILE}

volumes:
  sql-db:

